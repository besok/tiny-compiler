  1:	function main
  2:	arg args = ]string
  3:	return type = void
  4:	v1 = true
  5:	isWorking = init bool
  6:	isWorking = v1
  7:	v2 = isWorking
  8:	ifFalse v2 goto 53
  9:	v4 = "please input a number : "
 10:	v3 = param v4
 11:	v5 = call Input 1
 12:	l = init num
 13:	l = v5
 14:	v7 = "please input an operator like +,-,/,*,% :"
 15:	v6 = param v7
 16:	v8 = call Input 1
 17:	op = init string
 18:	op = v8
 19:	v10 = "please input a number :"
 20:	v9 = param v10
 21:	v11 = call Input 1
 22:	r = init num
 23:	r = v11
 24:	v13 = op
 25:	v12 = param v13
 26:	v15 = l
 27:	v14 = param v15
 28:	v17 = r
 29:	v16 = param v17
 30:	v18 = call operation 3
 31:	res = init num
 32:	res = v18
 33:	v21 = res
 34:	v20 = param v21
 35:	v22 = call makeStringResult 1
 36:	v19 = param v22
 37:	v23 = call Output 1
 38:	v25 = "do you want to continue?"
 39:	v24 = param v25
 40:	v26 = call Input 1
 41:	cont = init string
 42:	cont = v26
 43:	v28 = cont
 44:	v27 = v28
 45:	v30 = "y"
 46:	v29 = v30
 47:	v31 = v27 != v29
 48:	ifFalse v31 goto 52
 49:	v32 = false
 50:	isWorking = v32
 51:	goto 52
 52:	goto 7
 53:	function operation
 54:	arg op = string
 55:	arg l = num
 56:	arg r = num
 57:	return type = num
 58:	v33 = 0
 59:	result = init num
 60:	result = v33
 61:	v35 = op
 62:	v34 = v35
 63:	v37 = "+"
 64:	v36 = v37
 65:	v38 = v34 == v36
 66:	ifFalse v38 goto 72
 67:	v39 = l
 68:	v40 = r
 69:	v41 = v39 + v40
 70:	result = v41
 71:	goto 121
 72:	v43 = op
 73:	v42 = v43
 74:	v45 = "-"
 75:	v44 = v45
 76:	v46 = v42 == v44
 77:	ifFalse v46 goto 83
 78:	v47 = l
 79:	v48 = r
 80:	v49 = v47 - v48
 81:	result = v49
 82:	goto 121
 83:	v51 = op
 84:	v50 = v51
 85:	v53 = "*"
 86:	v52 = v53
 87:	v54 = v50 == v52
 88:	ifFalse v54 goto 94
 89:	v55 = l
 90:	v56 = r
 91:	v57 = v55 * v56
 92:	result = v57
 93:	goto 121
 94:	v59 = op
 95:	v58 = v59
 96:	v61 = "/"
 97:	v60 = v61
 98:	v62 = v58 == v60
 99:	ifFalse v62 goto 105
100:	v63 = l
101:	v64 = r
102:	v65 = v63 / v64
103:	result = v65
104:	goto 121
105:	v67 = op
106:	v66 = v67
107:	v69 = "%"
108:	v68 = v69
109:	v70 = v66 == v68
110:	ifFalse v70 goto 116
111:	v71 = l
112:	v72 = r
113:	v73 = v71 % v72
114:	result = v73
115:	goto 121
116:	v75 = "please to ensure you peek correct operator"
117:	v74 = param v75
118:	v76 = call Output 1
119:	v77 = 0
120:	result = v77
121:	v78 = result
122:	 return v78
123:	function makeStringResult
124:	arg result = num
125:	return type = string
126:	v81 = result
127:	v80 = param v81
128:	v82 = call numToArray 1
129:	v79 = param v82
130:	v83 = call revert 1
131:	nums = init ]num
132:	nums = v83
133:	v84 = ""
134:	strNum = init string
135:	strNum = v84
136:	v85 = 0
137:	i = init num
138:	i = v85
139:	v87 = i
140:	v86 = v87
141:	v91 = nums
142:	v90 = param v91
143:	v92 = call Len 1
144:	v89 = v92
145:	v88 = v89
146:	v93 = v86 < v88
147:	ifFalse v93 goto 160
148:	v94 = strNum
149:	v97 = i
150:	v98 = nums[149]
151:	v96 = param v98
152:	v99 = call numToString 1
153:	v95 = v99
154:	v100 = v94 + v95
155:	strNum = v100
156:	v101 = i
157:	v102 = 1
158:	v103 = v101 + v102
159:	i = v103
160:	v105 = strNum
161:	v104 = v105
162:	v107 = ""
163:	v106 = v107
164:	v108 = v104 == v106
165:	ifFalse v108 goto 169
166:	v109 = "undefined"
167:	strNum = v109
168:	goto 169
169:	v110 = "result is "
170:	v111 = strNum
171:	v112 = v110 + v111
172:	 return v112
173:	function numToString
174:	arg number = num
175:	return type = string
176:	v113 = init_arr 
177:	v114 = init_arr 
178:	v115 = init_arr 
179:	v116 = init_arr 
180:	v117 = init_arr 
181:	v118 = init_arr 
182:	v119 = init_arr 
183:	v120 = init_arr 
184:	v121 = init_arr 
185:	v122 = init_arr 
186:	numbers = init ]string
187:	v123 = number
188:	v124 = numbers[187]
189:	 return v124
190:	function numToArray
191:	arg number = num
192:	return type = ]num
193:	arrayOfNum = init ]num
194:	v125 = number
195:	tempElement = init num
196:	tempElement = v125
197:	v127 = tempelement
198:	v126 = v127
199:	v129 = 0
200:	v128 = v129
201:	v130 = v126 > v128
202:	ifFalse v130 goto 218
203:	v131 = tempElement
204:	v132 = 10
205:	v133 = v131 % v132
206:	nextEl = init num
207:	nextEl = v133
208:	v135 = arrayOfNum
209:	v134 = param v135
210:	v137 = nextEl
211:	v136 = param v137
212:	v138 = call Add 2
213:	v139 = tempElement
214:	v140 = 10
215:	v141 = v139 / v140
216:	tempElement = v141
217:	goto 197
218:	v142 = arrayOfNum
219:	 return v142
220:	function revert
221:	arg array = ]num
222:	return type = ]num
223:	revertArray = init ]num
224:	v145 = array
225:	v144 = param v145
226:	v146 = call Len 1
227:	v143 = v146
228:	v147 = 1
229:	v148 = v143 - v147
230:	l = init num
231:	l = v148
232:	v149 = 0
233:	i = init num
234:	i = v149
235:	v151 = i
236:	v150 = v151
237:	v155 = array
238:	v154 = param v155
239:	v156 = call Len 1
240:	v153 = v156
241:	v152 = v153
242:	v157 = v150 < v152
243:	ifFalse v157 goto 253
244:	v158 = l
245:	v159 = i
246:	v160 = v158 - v159
247:	v161 = array[v160]
248:	revertArray[0] = v161
249:	v162 = i
250:	v163 = 1
251:	v164 = v162 + v163
252:	i = v164
253:	v165 = revertArray
254:	 return v165

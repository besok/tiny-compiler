   1:  function main
   2:  argument args = ]string
   3:  return_type = void
   4:  _s1 = "The calculator implementation!"
   5:  _p1 = param _s1
   6:  _p2 = call Output 1
   7:  _b1 = true
   8:  isWorking = init bool
   9:  isWorking = _b1
  10:  _p3 = isWorking
  11:  ifFalse _p3 goto 56
  12:  _s2 = "please input a number : "
  13:  _p4 = param _s2
  14:  _p5 = call Input 1
  15:  l = init num
  16:  l = _p5
  17:  _s3 = "please input an operator like +,-,/,*,% :"
  18:  _p6 = param _s3
  19:  _p7 = call Input 1
  20:  op = init string
  21:  op = _p7
  22:  _s4 = "please input a number : "
  23:  _p8 = param _s4
  24:  _p9 = call Input 1
  25:  r = init num
  26:  r = _p9
  27:  _p11 = op
  28:  _p10 = param _p11
  29:  _p13 = l
  30:  _p12 = param _p13
  31:  _p15 = r
  32:  _p14 = param _p15
  33:  _p16 = call operation 3
  34:  res = init num
  35:  res = _p16
  36:  _p19 = res
  37:  _p18 = param _p19
  38:  _p20 = call makeStringResult 1
  39:  _p17 = param _p20
  40:  _p21 = call Output 1
  41:  _s5 = "do you want to continue(y-yes, n-no)? "
  42:  _p22 = param _s5
  43:  _p23 = call Input 1
  44:  cont = init string
  45:  cont = _p23
  46:  _p25 = cont
  47:  _p24 = _p25
  48:  _s6 = "y"
  49:  _p26 = _s6
  50:  _p27 = _p24 != _p26
  51:  ifFalse _p27 goto 55
  52:  _b2 = false
  53:  isWorking = _b2
  54:  goto 55
  55:  goto 10
  56:  function operation
  57:  argument op = string
  58:  argument l = num
  59:  argument r = num
  60:  return_type = num
  61:  _n1 = 0
  62:  result = init num
  63:  result = _n1
  64:  _p29 = op
  65:  _p28 = _p29
  66:  _s7 = "+"
  67:  _p30 = _s7
  68:  _p31 = _p28 == _p30
  69:  ifFalse _p31 goto 75
  70:  _p32 = l
  71:  _p33 = r
  72:  _p34 = _p32 + _p33
  73:  result = _p34
  74:  goto 122
  75:  _p36 = op
  76:  _p35 = _p36
  77:  _s8 = "-"
  78:  _p37 = _s8
  79:  _p38 = _p35 == _p37
  80:  ifFalse _p38 goto 86
  81:  _p39 = l
  82:  _p40 = r
  83:  _p41 = _p39 - _p40
  84:  result = _p41
  85:  goto 122
  86:  _p43 = op
  87:  _p42 = _p43
  88:  _s9 = "*"
  89:  _p44 = _s9
  90:  _p45 = _p42 == _p44
  91:  ifFalse _p45 goto 97
  92:  _p46 = l
  93:  _p47 = r
  94:  _p48 = _p46 * _p47
  95:  result = _p48
  96:  goto 122
  97:  _p50 = op
  98:  _p49 = _p50
  99:  _s10 = "/"
 100:  _p51 = _s10
 101:  _p52 = _p49 == _p51
 102:  ifFalse _p52 goto 108
 103:  _p53 = l
 104:  _p54 = r
 105:  _p55 = _p53 / _p54
 106:  result = _p55
 107:  goto 122
 108:  _p57 = op
 109:  _p56 = _p57
 110:  _s11 = "%"
 111:  _p58 = _s11
 112:  _p59 = _p56 == _p58
 113:  ifFalse _p59 goto 119
 114:  _p60 = l
 115:  _p61 = r
 116:  _p62 = _p60 % _p61
 117:  result = _p62
 118:  goto 122
 119:  _s12 = "please, ensure you peek correct operator"
 120:  _p63 = param _s12
 121:  _p64 = call Output 1
 122:  _p65 = result
 123:  return _p65
 124:  function makeStringResult
 125:  argument result = num
 126:  return_type = string
 127:  _p68 = result
 128:  _p67 = param _p68
 129:  _p69 = call numToArray 1
 130:  _p66 = param _p69
 131:  _p70 = call revert 1
 132:  nums = init ]num
 133:  nums = _p70
 134:  _s13 = ""
 135:  strNum = init string
 136:  strNum = _s13
 137:  _n2 = 0
 138:  i = init num
 139:  i = _n2
 140:  _p72 = i
 141:  _p71 = _p72
 142:  _p76 = nums
 143:  _p75 = param _p76
 144:  _p77 = call Len 1
 145:  _p74 = _p77
 146:  _p73 = _p74
 147:  _p78 = _p71 < _p73
 148:  ifFalse _p78 goto 162
 149:  _p79 = strNum
 150:  _p82 = i
 151:  _p83 = nums[_p82]
 152:  _p81 = param _p83
 153:  _p84 = call numToString 1
 154:  _p80 = _p84
 155:  _p85 = _p79 + _p80
 156:  strNum = _p85
 157:  _p86 = i
 158:  _n3 = 1
 159:  _p87 = _p86 + _n3
 160:  i = _p87
 161:  goto 140
 162:  _p89 = strNum
 163:  _p88 = _p89
 164:  _s14 = ""
 165:  _p90 = _s14
 166:  _p91 = _p88 == _p90
 167:  ifFalse _p91 goto 171
 168:  _s15 = "undefined"
 169:  strNum = _s15
 170:  goto 171
 171:  _s16 = "result is "
 172:  _p92 = strNum
 173:  _p93 = _s16 + _p92
 174:  return _p93
 175:  function numToString
 176:  argument number = num
 177:  return_type = string
 178:  _s17 = init_arr "0"
 179:  _s18 = init_arr "1"
 180:  _s19 = init_arr "2"
 181:  _s20 = init_arr "3"
 182:  _s21 = init_arr "4"
 183:  _s22 = init_arr "5"
 184:  _s23 = init_arr "6"
 185:  _s24 = init_arr "7"
 186:  _s25 = init_arr "8"
 187:  _s26 = init_arr "9"
 188:  numbers = init ]string
 189:  _p94 = number
 190:  _p95 = numbers[_p94]
 191:  return _p95
 192:  function numToArray
 193:  argument number = num
 194:  return_type = ]num
 195:  arrayOfNum = init ]num
 196:  _p96 = number
 197:  tempElement = init num
 198:  tempElement = _p96
 199:  _p98 = tempElement
 200:  _p97 = _p98
 201:  _n4 = 0
 202:  _p99 = _n4
 203:  _p100 = _p97 > _p99
 204:  ifFalse _p100 goto 220
 205:  _p101 = tempElement
 206:  _n5 = 10
 207:  _p102 = _p101 % _n5
 208:  nextEl = init num
 209:  nextEl = _p102
 210:  _p104 = arrayOfNum
 211:  _p103 = param _p104
 212:  _p106 = nextEl
 213:  _p105 = param _p106
 214:  _p107 = call Add 2
 215:  _p108 = tempElement
 216:  _n6 = 10
 217:  _p109 = _p108 / _n6
 218:  tempElement = _p109
 219:  goto 199
 220:  _p110 = arrayOfNum
 221:  return _p110
 222:  function revert
 223:  argument array = ]num
 224:  return_type = ]num
 225:  revertArray = init ]num
 226:  _p113 = array
 227:  _p112 = param _p113
 228:  _p114 = call Len 1
 229:  _p111 = _p114
 230:  _n7 = 1
 231:  _p115 = _p111 - _n7
 232:  l = init num
 233:  l = _p115
 234:  _n8 = 0
 235:  i = init num
 236:  i = _n8
 237:  _p117 = i
 238:  _p116 = _p117
 239:  _p121 = array
 240:  _p120 = param _p121
 241:  _p122 = call Len 1
 242:  _p119 = _p122
 243:  _p118 = _p119
 244:  _p123 = _p116 < _p118
 245:  ifFalse _p123 goto 257
 246:  _p124 = l
 247:  _p125 = i
 248:  _p126 = _p124 - _p125
 249:  _p127 = array[_p126]
 250:  _p128 = i
 251:  revertArray[_p128] = _p127
 252:  _p129 = i
 253:  _n9 = 1
 254:  _p130 = _p129 + _n9
 255:  i = _p130
 256:  goto 237
 257:  _p131 = revertArray
 258:  return _p131
